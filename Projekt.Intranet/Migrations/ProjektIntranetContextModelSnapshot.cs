// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projekt.Intranet.Data;

#nullable disable

namespace Projekt.Intranet.Migrations
{
    [DbContext(typeof(ProjektIntranetContext))]
    partial class ProjektIntranetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Galeria", b =>
                {
                    b.Property<int>("IdGaleria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGaleria"));

                    b.Property<int>("IdTattoArtists")
                        .HasColumnType("int");

                    b.Property<string>("UrlZdjecia")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdGaleria");

                    b.HasIndex("IdTattoArtists");

                    b.ToTable("Galeria");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Klient", b =>
                {
                    b.Property<int>("IdKlient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdKlient"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumerTelefonu")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("IdKlient");

                    b.ToTable("Klient");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Rezerwacje", b =>
                {
                    b.Property<int>("IdRezerwacja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRezerwacja"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Godzina")
                        .HasColumnType("time");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdTattoArtists")
                        .HasColumnType("int");

                    b.Property<string>("Uwagi")
                        .HasMaxLength(400)
                        .HasColumnType("nvarchar(400)");

                    b.HasKey("IdRezerwacja");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdTattoArtists");

                    b.ToTable("Rezerwacje");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Tatto", b =>
                {
                    b.Property<int>("IdTattoo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTattoo"));

                    b.Property<decimal?>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdTattoArtists")
                        .HasColumnType("int");

                    b.Property<string>("Styl")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTattoo");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdTattoArtists");

                    b.ToTable("Tatto");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.TattoArtists", b =>
                {
                    b.Property<int>("IdTattoArtists")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTattoArtists"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Imie")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("LataDoswiatczenia")
                        .HasColumnType("int");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("NumerKonta")
                        .IsRequired()
                        .HasMaxLength(26)
                        .HasColumnType("nvarchar(26)");

                    b.Property<string>("NumerTelefonu")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Przydomek")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Specjalizacja")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTattoArtists");

                    b.ToTable("TattoArtists");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("haslo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Platnosc", b =>
                {
                    b.Property<int>("IdPlatnosc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlatnosc"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRezerwacja")
                        .HasColumnType("int");

                    b.Property<decimal>("Kwota")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MetodaPlatnosci")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RezerwacjeIdRezerwacja")
                        .HasColumnType("int");

                    b.HasKey("IdPlatnosc");

                    b.HasIndex("RezerwacjeIdRezerwacja");

                    b.ToTable("Platnosc");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Produkt", b =>
                {
                    b.Property<int>("IdProdukt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProdukt"));

                    b.Property<decimal>("Cena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IloscMagazynowa")
                        .HasColumnType("int");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("IdProdukt");

                    b.ToTable("Produkt");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Recenzja", b =>
                {
                    b.Property<int>("IdRecenzji")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRecenzji"));

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdTattoArtists")
                        .HasColumnType("int");

                    b.Property<string>("Komentarz")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("Wartosc")
                        .HasColumnType("int");

                    b.HasKey("IdRecenzji");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdTattoArtists");

                    b.ToTable("Recenzja");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Zamowienia", b =>
                {
                    b.Property<int>("IdZamowienia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdZamowienia"));

                    b.Property<int>("IdKlient")
                        .HasColumnType("int");

                    b.Property<int>("IdProduktu")
                        .HasColumnType("int");

                    b.HasKey("IdZamowienia");

                    b.HasIndex("IdKlient");

                    b.HasIndex("IdProduktu");

                    b.ToTable("Zamowienia");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Galeria", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.TattoArtists", "TattoArtists")
                        .WithMany("Galeria")
                        .HasForeignKey("IdTattoArtists")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TattoArtists");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Rezerwacje", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.Klient", "Klient")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Intranet.Models.CMS.TattoArtists", "TattoArtists")
                        .WithMany("Rezerwacje")
                        .HasForeignKey("IdTattoArtists")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("TattoArtists");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Tatto", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.Klient", "Klient")
                        .WithMany("Tatto")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Intranet.Models.CMS.TattoArtists", "TattoArtists")
                        .WithMany("Tatto")
                        .HasForeignKey("IdTattoArtists")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("TattoArtists");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Platnosc", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.Rezerwacje", "Rezerwacje")
                        .WithMany()
                        .HasForeignKey("RezerwacjeIdRezerwacja");

                    b.Navigation("Rezerwacje");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Recenzja", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.Klient", "Klient")
                        .WithMany("Recenzja")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Intranet.Models.CMS.TattoArtists", "TattoArtists")
                        .WithMany("Recenzja")
                        .HasForeignKey("IdTattoArtists")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("TattoArtists");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Zamowienia", b =>
                {
                    b.HasOne("Projekt.Intranet.Models.CMS.Klient", "Klient")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdKlient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Projekt.Intranet.Models.Sklep.Produkt", "Produkt")
                        .WithMany("Zamowienia")
                        .HasForeignKey("IdProduktu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klient");

                    b.Navigation("Produkt");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.Klient", b =>
                {
                    b.Navigation("Recenzja");

                    b.Navigation("Rezerwacje");

                    b.Navigation("Tatto");

                    b.Navigation("Zamowienia");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.CMS.TattoArtists", b =>
                {
                    b.Navigation("Galeria");

                    b.Navigation("Recenzja");

                    b.Navigation("Rezerwacje");

                    b.Navigation("Tatto");
                });

            modelBuilder.Entity("Projekt.Intranet.Models.Sklep.Produkt", b =>
                {
                    b.Navigation("Zamowienia");
                });
#pragma warning restore 612, 618
        }
    }
}
